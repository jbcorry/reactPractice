{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","toString","slice","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorID","add","Date","App","path","exact","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","config","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","createFirestoreInstance","presence","sessions","ReactDOM","render","children","useSelector","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.3e8f85b9.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signOut} from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>LogOut</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n                {props.profile.initials}\n            </NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch({type: 'LOGIN_ERROR', err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email, \n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({type: 'SIGNUP_ERROR', err});\n        });\n    }\n}","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport {connect} from 'react-redux'\n\nconst Navbar = (props) => {\n    const {auth, profile} = props\n    //console.log(auth)\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n                {auth.isLoaded && links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n\n    const {notifications} = props;\n\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">\n                        Notifications\n                    </span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content} </span>\n                                    <span className=\"grey-text note-date\">{moment(item.time.toDate()).fromNow()}</span>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"project-summary card z-depth-0\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">\n                    {project.title}\n                </span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{project.createdAt.toDate().toString().slice(0,15)}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id} key={project.id}>\n                        <ProjectSummary project={project}/>\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList","import React, {Component} from 'react'\nimport {compose} from 'redux'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {Redirect} from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render() {\n        const {projects, auth, notifications} = this.props\n\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"project-list col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"notifications col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 5, orderBy: ['time', 'desc']}\n    ])\n)(Dashboard)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport {Redirect} from 'react-router-dom'\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n\n    if (!auth.uid) return <Redirect to=\"/signin\" />\n\n    if (project) {\n        return (\n            <div className=\"project-details container\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                        <div>{project.createdAt.toDate().toString().slice(0,15)}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {signIn} from '../../store/actions/authActions'\nimport {Redirect} from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        const {authError, auth} = this.props\n\n        if (auth.uid) return <Redirect to=\"/\" />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input id=\"email\" type=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input id=\"password\" type=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signUp} from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n    render() {\n        const {auth, authError} = this.props\n\n        if (auth.uid) return <Redirect to=\"/\" />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input id=\"firstName\" type=\"text\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input id=\"lastName\" type=\"text\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input id=\"email\" type=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input id=\"password\" type=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport {createProject} from '../../store/actions/projectActions'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state)\n        this.props.history.push('/');\n    }\n    render() {\n        const {auth} = this.props\n\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input id=\"title\" type=\"text\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        \n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorID = getState().firebase.auth.uid\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorID: authorID,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({\n                type: 'CREATE_PROJECT',\n                project: project\n            })\n        }).catch((err) => {\n            dispatch({\n                type: 'CREATE_PROJECT_ERROR',\n                err\n            })\n        })\n\n\n    }\n}","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Dashboard} />\n        <Route path=\"/signin\" exact component={SignIn} />\n        <Route path=\"/signup\" exact component={SignUp} />\n        <Route path=\"/create\" exact component={CreateProject} />\n        <Route path=\"/project/:id\" exact component={ProjectDetails} />\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n        console.log('login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null,\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signed out!')\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('sign up success!')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('sign up error!')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'she was taken by bowser'},\n        {id: '2', title: 'help me find daisy', content: 'she was taken by king boo'},\n        {id: '3', title: 'help me find luigi', content: 'he probably got lost somewhere'},\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport {combineReducers} from 'redux';\nimport {firestoreReducer} from 'redux-firestore';\nimport {firebaseReducer} from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBUru94TObOiDl4v_L_uURdr-kPeZU6fhE\",\n    authDomain: \"mario-plan-net-ninja-tutorial.firebaseapp.com\",\n    databaseURL: \"https://mario-plan-net-ninja-tutorial.firebaseio.com\",\n    projectId: \"mario-plan-net-ninja-tutorial\",\n    storageBucket: \"mario-plan-net-ninja-tutorial.appspot.com\",\n    messagingSenderId: \"38943113230\",\n    appId: \"1:38943113230:web:e830bff6aece0c6d18bc5f\",\n  };\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {createFirestoreInstance, reduxFirestore, getFirestore} from 'redux-firestore';\nimport {ReactReduxFirebaseProvider, reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\n\nconst config = {\n  ...fbConfig,\n  userProfile: 'users', // where profiles are stored in database,\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true\n};\n\nconst store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n      reduxFirestore(firebase, config)\n    )\n  );\n\n  \n  const rrfProps = {\n    firebase,\n    config,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n    userProfile: 'users', // where profiles are stored in database\n    presence: 'presence', // where list of online users is stored in database\n    sessions: 'sessions'\n  }\n\n  function AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n        return children\n  }\n  \n  ReactDOM.render(\n    <Provider store={store}> \n      <ReactReduxFirebaseProvider {...rrfProps}> \n        <AuthIsLoaded>\n          <App /> \n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>, \n  document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}